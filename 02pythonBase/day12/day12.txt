day10~11回顾:

函数 function
  def 函数名(形参列表):
      语句块


  print(函数名)
  print(函数名())

函数的传参:  把数据给函数
  位置传参
    序列传参
  关键字传参
    字典关键字传参

函数的形参:  接收调用者给我们的数据
  位置形参
  * 元组形参
  命名关键字形参
  ** 字典形参


函数的缺省参数
  def fn(a, b=1, c=2):
     pass

作用域:
  LEGB
  局部Local
  外部嵌套函数作用域Enclosing function local
  全局 Globals
  内建 Builtin

全局变量和局部变量

globals(), locals()

函数名是变量  

函数可以嵌套定义:
  def fx():
      def fy():
          pass
      return fy

  fa = fx()

global 语句
nonlocal 语句


lambda 表达式
def 语句

eval函数
exec函数



函数式编程
  用函数解决问题

高阶函数:
  map(函数, 一个或多个可迭代对象)
  filter(函数, 一个可迭代对象)
  sorted(可迭代对象, key=函数, reverse=True/False)

递归




day12笔记:
闭包 closure
  什么是闭包:
    闭包是指引用了此函数外部的变量的函数
    (如果一个内嵌函数引用了外部嵌套函数作用域内的变量,则这个函数就是闭包)
  闭包必须满足三个条件:
    必须有一个内嵌函数
    内嵌函数必须引用外部函数中的变量
    外部函数的返回值必须是内嵌函数

示例见
  closure.py
  closure2.py


装饰器 decorators(专业提高篇)
什么是装饰器:
  装饰器是一个函数,主要作用是用来包装另一个函数或类(后面才讲)
  包装的目的是在不改变原函数名的情况下,改变被包装对象的行为

函数装饰器:
  函数装饰器是指传入一个函数,返回的也是一个函数的函数

装饰器语法:
  def 装饰器函数名(参数):
      语句块
      return 函数对象

  @装饰器函数名<换行>
  def 被装饰器函数名(形参列表):
      语句块

  示例见:
    mydeco1.py


函数的文档字符串
  函数内第一次未赋值给任何变量的字符串是函数的文档字符串

  语法:
    def 函数名(参数列表):
      '''函数函数的文档字符串'''
      语句块
  说明:
    1. 文档字符串通常用来说明函数的功能和使用方法
    2. 在交互模式下输入>>> help(函数名)可以查看函数的文档字符串
    3. 函数的文档字符串绑定在函数的__doc__属性上
  示例:
    def myfun():
        '这是一段文档字符串'
        pass
    >>> help(myfun)

函数的 __doc__属性
  用于记录函数的文档字符串

函数的 __name__ 属性 
  用来记录函数名


函数的完整语法:
[@装饰器1]
[@装饰器2]
[...]
def 函数名(位置形参, *元组形参, 命名关键字形参, **字典形参):
    '文档字符串'
    语句块



模块 Module

什么是模块
  模块是一个包含有一系列数据,函数,类等组成的程序组 
  模块是一个文件, 模块文件名通常以.py结尾

  作用:
    1. 让一些相关的数据,函数,类等有逻辑的组织在一起,使逻辑结构更加清晰
    2. 模块中的数据,函数和类等可提供给其它模块或程序使用.

模块的分类:
  内置模块,在解析器内部(通常用C语言编写),可以直接使用
  标准库模块,安装python时已安装且可以直接使用
  第三方模块(通常为开源), 需要自己安装后再使用
  用户自己编写的模块,通常可以作为其它人的第三方模块

模块的导入 import语句
  import 语句
    import 模块名1 [as 模块新名1], 模块名2[ as 模块新名2]
  作用:
    将模块整体导入到当前模块中
  用法:
    模块名.属性名

dir(obj) 函数,返回所有属性的字符串列表
help(obj) 函数,可以查看模块的文档字符串

示例:
    import math
    print('5的阶乘是:', math.factorial(5))
    print("圆周率是:", math.pi)


练习:
  输入一个圆的半径,打印出这个圆的面积
  输入另一个圆的面积,打印出这个圆的半径
  (要求用math模块内的函数和数据)

from import 语句
  语法:
    from 模块名 import 模块属性名1 [as 模块属性新名1], 模块属性名2 [as 模块属性新名2], ...
  作用:
    将某模块内的一个或多个属性导入到当前模块的作用域

  示例:
    from math import factorial as fac
    from math import sin
    from math import pi, e
    print(sin(pi/2))
  示例见:
    from_import.py

from import *语句
  语法:
    from 模块名 import *
  作用:
    将某模块的所有属性导入到当前模块

  示例见:
    from_import_star.py


数学模块 math

时间模块 time

系统模块 sys

   文档参见:
     python_base_docs_html/数学模块math.html
     python_base_docs_html/时间模块time.html
     python_base_docs_html/系统模块sys.html

下周预告:
  随机模块 random 下周再讲
  自定义模块
  包
  异常 exception
  迭代器和生成器


练习:
  1. 写一个程序，输入你的生日
    1) 算出你已经出生多少天
    2) 算出你出生那天是星期几
      用: time模块

  2. 写一个程序，以电子时钟格式打印当前时间:
     格式为:
       HH:MM:SS 
       最好每隔一秒打印一次
     提示:
       time.sleep(x)
  3. 编写一个闹钟程序，启动时设置定时时间，到时间后打印一句
  "时间到"，然后退出程序




