
姓名: 魏明择
EMail:  weimz@tedu.cn
  问题解答: 班号,姓名,中心地址: 问题的详细描述


day05回顾:
  字符串:
    作用:
      存储文字信息
    表示方式:
      字面值:
        ''  / 'hello'
        ""  / "hello"
        '''''' , '''hello'''
        """""" , """world"""
      构造函数(创建)函数
        str(100)
    运算:
      +   +=   *   *= 
        'hello' * 3
      < <= > >= == != 
      'ABC' < 'ACB'
      in, not in 运算
      索引／切片
    用于字符串的函数:
      len(x)  返回字符串的长度(字符的个数)
      max(x)  返回编码值最大的一个字符
      min(x)
      ord(x)  # 返回一个文字对应的编码的值
      chr(x)  # 根据编码值返回对应的字符

    方法:
      对象.方法名(方法传参)

    S.center(宽度)
    S.find(x)
    S.strip()
    S.lstrip()
    S.rstrip()
    详见:
      >>> help(str)

    字符串的格式化表达式:
      '字符串' % 参数
      '字符串' % (参数1, 参数2)

    s = '姓名:%s, 年龄:%d'

　　　　s2 = s % ('魏明择', 35)


    '%-+10d'  % 123
    '%+7.2f'  % 3.1415926


循环语句:
  有两种：
  　　while 语句
    for 语句

while 语句:
  语法:
    while 真值表达式:
       语句块1(此处放需要重复执行的语句)
    else:
       语句块2

打印 0 + 1 + 2 + 3 + ... + 100 的和


　1. 打印 1 ~ 20 的整数，打印在一行内:
    1 2 3 4 5 6 7 8 9 ..... 19 20

 2. 打印　1 ~ 20 的整数，每行打印5个，打印４行
    1 2 3 4 5
    6 7 8 9 10
    11 12 13 14 15


    print(1, end=' ')
    print(2, end=' ')
    print(3, end=' ')
    print(4, end=' ')
练习：
　　1. 写程序，输入一个开始整数用变量begin绑定
　　输入一个结束的整数用变量end 绑定
  打印从begin开始到end(不包含end结束)的每个整数，打印在一行内
  请输入开始值: 8
  请输入结束值: 20
  8 9 10 11 .... 19 20


  思考，如何实现每5个数字打印在一行？
  8 9 10 11 12
  13 .....
  　　
while 循环注意事项:
  1. 要控制循环的真值表达式的值来防止死循环
  2. 通常用真值表达式内的循环变量来控制循环条件
  3. 通常要循环语句内部要改变循环变量来控制循环次数和变量的走向


while 语句 while statement
while 语句嵌套:
  while语句本身是语句，和其它语句一样，可以嵌套到任何复合语句中

  示意:
    while 真值表达式:
        ...
        while 真值达式2:
            ...
        else:
            ...
        ...
    else:
        ...
  示例:
    while_embed.py



练习:
  1. 写程序，输入一个整数，打印正方形的宽度，打印指定宽度的正方形
  如:
    请输入: 5
　　打印正方形如下:
    1 2 3 4 5
    1 2 3 4 5
    1 2 3 4 5
    1 2 3 4 5
    1 2 3 4 5
  如:
    请输入: ３
　　打印正方形如下:
    1 2 3
    1 2 3
    1 2 3



break 语句
  问题:
    如果在循环过程中不想再继续此循环语句的执行了，怎么办？
　　作用:
    用于循环语句(while 或for语句)中，用来终止当前循环语句的执行
  说明:
    1.当break语句执行后，此循环语句break之后的语句将不再执行
    2.break语句通知和if语句组合使用
    3.break语句终止循环时，循环语句的else子句的语句将不再被执行
    4. break语句只能终止当前循环语句的执行，如果有循环嵌套时，不会跳出嵌套的外重循环
    5. break语句只能在循环语句(while或 for语句)内部使用
  示例见:
    break.py

死循环:
  死循环是指条件一直成立的循环
  死循环通常用break语句来终止循环
  死循环的else子句永远不会执行

练习:
  任意输入一些整数，当输入负数时结束输入
    当输入完成后，打印您输入的这些数的和

  如:
    请输入: 1
    请输入: 2
    请输入: 3
    请输入: 4
    请输入: -1
　　您刚才输入的这些数的和是: 10


for 语句
  作用:
    用来遍历可迭代对象的数据元素

可迭代对象是指能依次获取数据元素的对象
可迭代对象包括:
  字符串
  ----以下后面会学到-----
  range函数返回的对象
  列表　list
  元组 tuple
  ...

  语法:
    for 变量列表 in 可迭代对象:
        语句块1
    else:
        语句块2

　　示例:
    for.py
    for_else.py
  for 语句说明:
    1. else 子句部分可以省略(同while语句类似)
    2.  当在循环语句内部用break终止循环时，else子句部分的语句不会执行

练习:
  １．任意输入一段字符串:
    1) 计算出您输入的字符串中的'a' 这个字符的个数，并打印个数
    如:
      请输入: abcd abc bc a
　　　　输出:
      您输入的a的个数是: 3
    (要求，不允许使用S.count方法)


range() 函数
　　range(stop)  用来生成[0, stop) 范围内的整数，不包含stop
  range(start, stop[, step]) 用于生成从start 开始到stop结束的整数，每次生成后移动step，直到stop为止(不包含stop且 step可以是负数)
  详见:
    >>> help(range)
  作用:
    用来创建一个生成一系列整数的可迭代对象(也叫整数序列生成器)
  说明:
    range() 返回的对象是可迭代对象，可以用于for语句中来依次取出其中的数据
  示意:
    range(4)         生成 0 1 2 3 
    range(3, 6)      生成 3 4 5
    range(1, 10, 2)  生成 1, 3, 5, 7, 9
    range(5, 0, -2)  生成 5, 3, 1
    range(4, 0)      空

  示例见:
    range.py



练习：
  1. 用for语句打印 1 ~ 20的整数，打印在一行内
     1 2 3 4 5 .... 20

  2. 求 100以内有哪儿些整数与 自身+1的乘积再对 11求余的结果等于8?

  3. 计算 1 + 3 + 5 + 7 + .... + 99 的和并打印出来
    要求:
      1. 用for 语句实现
      2. 用while 语句实现

for 语句的注意事项:
  问请此题的打印结果是什么？说明什么问题:
  i = 6
  for x in range(1, i):
       print('x=', x, 'i=', i)
       i -= 1
  结果:
    x= 1 i= 6
    x= 2 i= 5
    x= 3 i= 4
    x= 4 i= 3
    x= 5 i= 2



for 语句嵌套:
    for x in "ABC":
        for y in '123':
            print(x + y)
思考打印次数:
for x in range(5):
    for y in range(10):
        print("结果:", x, y)

练习:
  用循环语句实现打印三角形.输入一个整数，代表三角形的宽度和高度,打印出相应的三角形
    1) 如:
       请输入三角形的宽度: 4
    打印结果如下:
      *
      **
      ***
      ****
    2) 如:
       请输入三角形的宽度: 4
    打印结果如下:
         *
        **
       ***
      ****
    3) 如:
       请输入三角形的宽度: 4
    打印结果如下:
      ****
       ***
        **
         *
    4) 如:
       请输入三角形的宽度: 4
    打印结果如下:
      ****
      ***
      **
      *

  5.　写一个程序，任意输入一个数，判断这个数是否是素数(prime)
    素数(也叫质数) 只能被1和自身整除的正整数

    例如: 2 3 5 7 11 13 .....
    提示用排除法: 当判断一个数x是否为素数时，只要让x分别除以2, 3, 4... x-1，只要有一次被整除，则x不是素数

  6. 输入一个整数，按宽度打印如下矩形:
    请输入: 5
        1 2 3 4 5
        2 3 4 5 6
        3 4 5 6 7
        4 5 6 7 8
        5 6 7 8 9
    请输入: 3
        1 2 3
        2 3 4
        3 4 5
预告:
  continue　语句
  列表list, 元组 tuple, 字典　dict, 集合set ...

